{"version":3,"sources":["webpack:///./src/pages/release-notes.tsx"],"names":["FooterWrapper","styled","PostsList","VersionUpdatesPage","data","siteMetadata","site","React","useState","tocIsOpen","setTocIsOpen","navHidden","docsPage","title","property","content","name","hasToc","isOpen","onClick","e","preventDefault","to","latestPosts","edges","map","node","key","id","fields","slug","frontmatter","subtitle","post","version","siteLastUpdated","socials"],"mappings":"4FAAA,oKA4BMA,EAAgBC,YAAO,OAAV,kFAAGA,CAAH,gCA0DbC,EAAYD,YAAO,OAAV,8EAAGA,CAAH,sBAIAE,UAzD6B,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACrCC,EAAiBD,EAAKE,KAAtBD,aADgD,EAEtBE,IAAMC,UAAS,GAA1CC,EAFiD,KAEtCC,EAFsC,KAUxD,OACE,kBAAC,IAAD,CAAaC,WAAS,GACpB,kBAAC,IAAD,CAAMC,UAAQ,GACZ,kBAAC,IAAD,KACE,kDAA+BP,EAAaQ,OAC5C,0BAAMC,SAAS,WAAWC,QAAQ,kBAClC,0BAAMC,KAAK,cAAcD,QAAQ,4DACjC,0BAAMD,SAAS,iBAAiBC,QAAQ,6DAE1C,kBAAC,IAAD,CAAaE,QAAM,GACjB,kBAAC,IAAD,CAAYC,OAAQT,EAAWU,QAhBrB,SAACC,GACjBA,EAAEC,iBAEFX,GAAcD,KAcN,4BACE,4BACE,kBAAC,OAAD,CAAMa,GAAG,kBAAT,iBAEDlB,EAAKmB,YAAYC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC1B,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,OAAD,CAAMN,GAAII,EAAKG,OAAOC,MAAOJ,EAAKK,YAAYlB,aAKtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYA,MAAM,gBAAgBmB,SAAS,4DAC3C,kBAAC9B,EAAD,KACGE,EAAKmB,YAAYC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC1B,kBAAC,IAAD,CAAeC,IAAKD,EAAKE,GAAIK,KAAMP,QAGvC,kBAAC1B,EAAD,KACE,kBAAC,IAAD,CACEkC,QAAS7B,EAAa6B,QACtBC,gBAAiB9B,EAAa8B,gBAC9BC,QAAS/B,EAAa+B","file":"component---src-pages-release-notes-tsx-a80d5973d5debc17fb35.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport Helmet from 'react-helmet';\r\nimport { RouteComponentProps } from '@reach/router';\r\nimport styled from 'styled-components';\r\n\r\nimport IndexLayout from 'layouts';\r\nimport { Footer } from 'components/layout/Footer';\r\nimport { DocsHeader } from 'components/docs/DocsHeader';\r\nimport { DocsWrapper } from 'components/docs/DocsWrapper';\r\nimport { TocWrapper } from 'components/docs/TableOfContents';\r\nimport { Container } from 'components/layout/Container';\r\nimport { Page } from 'components/layout/Page';\r\nimport { Edge } from 'interfaces/nodes';\r\nimport VersionUpdate from 'components/updates/VersionUpdate';\r\nimport { SiteMetadata, UpdatePost } from '../interfaces/gatsby';\r\n\r\ninterface Props extends RouteComponentProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: SiteMetadata;\r\n    };\r\n    latestPosts: {\r\n      edges: Edge<UpdatePost>[];\r\n    };\r\n  };\r\n}\r\n\r\nconst FooterWrapper = styled('div')`\r\n  margin-top: 40px;\r\n  padding: 0;\r\n`;\r\n\r\nconst VersionUpdatesPage: React.FC<Props> = ({ data }) => {\r\n  const { siteMetadata } = data.site;\r\n  const [tocIsOpen, setTocIsOpen] = React.useState(false);\r\n\r\n  const toggleToc = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    setTocIsOpen(!tocIsOpen);\r\n  };\r\n\r\n  return (\r\n    <IndexLayout navHidden>\r\n      <Page docsPage>\r\n        <Helmet>\r\n          <title>Release Notes &middot; {siteMetadata.title}</title>\r\n          <meta property=\"og:title\" content=\"Release Notes\" />\r\n          <meta name=\"description\" content=\"The latest news, updates, and changes on Kata Platform.\" />\r\n          <meta property=\"og:description\" content=\"The latest news, updates, and changes on Kata Platform.\" />\r\n        </Helmet>\r\n        <DocsWrapper hasToc>\r\n          <TocWrapper isOpen={tocIsOpen} onClick={toggleToc}>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/release-notes\">All Releases</Link>\r\n              </li>\r\n              {data.latestPosts.edges.map(({ node }) => (\r\n                <li key={node.id}>\r\n                  <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </TocWrapper>\r\n          <Container>\r\n            <DocsHeader title=\"Release Notes\" subtitle=\"The latest news, updates, and changes on Kata Platform.\" />\r\n            <PostsList>\r\n              {data.latestPosts.edges.map(({ node }) => (\r\n                <VersionUpdate key={node.id} post={node} />\r\n              ))}\r\n            </PostsList>\r\n            <FooterWrapper>\r\n              <Footer\r\n                version={siteMetadata.version}\r\n                siteLastUpdated={siteMetadata.siteLastUpdated}\r\n                socials={siteMetadata.socials}\r\n              />\r\n            </FooterWrapper>\r\n          </Container>\r\n        </DocsWrapper>\r\n      </Page>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nconst PostsList = styled('div')`\r\n  margin-top: 32px;\r\n`;\r\n\r\nexport default VersionUpdatesPage;\r\n\r\nexport const query = graphql`\r\n  query VersionUpdatesPageQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        sidebarTitle\r\n        sidebarSubtext\r\n        siteLastUpdated\r\n        description\r\n        version\r\n        siteUrl\r\n        keywords\r\n        author {\r\n          name\r\n          email\r\n        }\r\n        socials {\r\n          name\r\n          imgpath\r\n          url\r\n        }\r\n      }\r\n    }\r\n    latestPosts: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/release-notes/\" } }\r\n      sort: { fields: [fields___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n            layout\r\n          }\r\n          frontmatter {\r\n            title\r\n            version\r\n            category\r\n            header_image {\r\n              ... on File {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 752) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            date\r\n            date_formatted: date(formatString: \"mmmm dd, yyyy\")\r\n          }\r\n          excerpt\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}
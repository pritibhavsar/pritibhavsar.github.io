{"version":3,"sources":["webpack:///./src/templates/tag.tsx"],"names":["TagTemplate","render","this","props","pageContext","data","tag","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","keywords","className","map","node","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"qPAaqBA,E,gLACnBC,OAAA,WAAS,MACqBC,KAAKC,MAA1BC,EADA,EACAA,YAAaC,EADb,EACaA,KACbC,EAAOF,EAAPE,IACDC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQH,MAAOH,GACb,kBAAC,IAAD,CAAMG,MAAK,iBAAmBJ,EAAnB,IAA2BQ,SAAU,CAAC,OAAD,8BAA0CR,KAC1F,iCACE,gCACE,4CAAkBA,IAEpB,yBAAKS,UAAS,gBACXJ,EAAMK,KAAI,YAAY,IAAVC,EAAU,EAAVA,KACLP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,4BACE,kBAAC,OAAD,CAAME,GAAIL,EAAKE,OAAOC,MAAOV,IAE/B,+BAAQO,EAAKC,YAAYK,MACzB,uBAAGC,wBAAyB,CAACC,OAAQR,EAAKS,mB,GAvBnBC,IAAMC,WAyDlCC,EAAY","file":"component---src-templates-tag-tsx-a942d479436658b89ea3.js","sourcesContent":["import React from 'react'\r\nimport {Link, graphql} from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport Head from '../components/head'\r\n\r\ninterface Props {\r\n  readonly data: PageQueryData\r\n  readonly pageContext: {\r\n    tag: string\r\n  }\r\n}\r\n\r\nexport default class TagTemplate extends React.Component<Props> {\r\n  render() {\r\n    const {pageContext, data} = this.props\r\n    const {tag} = pageContext\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const posts = data.allMarkdownRemark.edges\r\n\r\n    return (\r\n      <Layout title={siteTitle}>\r\n        <Head title={`Posts tagged \"${tag}\"`} keywords={[`blog`, `gatsby`, `javascript`, `react`, tag]} />\r\n        <article>\r\n          <header>\r\n            <h1>Posts tagged {tag}</h1>\r\n          </header>\r\n          <div className={`page-content`}>\r\n            {posts.map(({node}) => {\r\n              const title = node.frontmatter.title || node.fields.slug\r\n              return (\r\n                <div key={node.fields.slug}>\r\n                  <h3>\r\n                    <Link to={node.fields.slug}>{title}</Link>\r\n                  </h3>\r\n                  <small>{node.frontmatter.date}</small>\r\n                  <p dangerouslySetInnerHTML={{__html: node.excerpt}} />\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </article>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\ninterface PageQueryData {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n    }\r\n  }\r\n  allMarkdownRemark: {\r\n    totalCount: number\r\n    edges: {\r\n      node: {\r\n        excerpt: string\r\n        fields: {\r\n          slug: string\r\n        }\r\n        frontmatter: {\r\n          date: string\r\n          title: string\r\n        }\r\n      }\r\n    }[]\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 1000, filter: {frontmatter: {tags: {in: [$tag]}}}) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 2500)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}
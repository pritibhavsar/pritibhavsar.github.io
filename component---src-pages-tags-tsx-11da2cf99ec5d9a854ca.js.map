{"version":3,"sources":["webpack:///./src/pages/tags.tsx"],"names":["Tags","render","data","this","props","siteTitle","site","siteMetadata","title","group","allMarkdownRemark","keywords","className","map","tag","key","fieldValue","to","totalCount","React","Component","pageQuery"],"mappings":"qPAUqBA,E,gLACnBC,OAAA,WAAS,IACAC,EAAQC,KAAKC,MAAbF,KACDG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBD,MAErC,OACE,kBAAC,IAAD,CAAQD,MAAOH,GACb,kBAAC,IAAD,CAAMG,MAAM,WAAWG,SAAU,CAAC,OAAD,iCACjC,iCACE,wCACA,yBAAKC,UAAS,gBACXH,EAAMI,KACL,SAAAC,GAAG,OACDA,GACE,yBAAKC,IAAKD,EAAIE,YACZ,4BACE,kBAAC,OAAD,CAAMC,GAAE,SAAWH,EAAIE,WAAf,KAA+BF,EAAIE,aAE7C,+BACGF,EAAII,WADP,QAEsB,IAAnBJ,EAAII,WAAmB,GAAK,a,GArBjBC,IAAMC,WA+C3BC,EAAY","file":"component---src-pages-tags-tsx-11da2cf99ec5d9a854ca.js","sourcesContent":["import React from 'react'\r\nimport {Link, graphql} from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport Head from '../components/head'\r\n\r\ninterface Props {\r\n  readonly data: PageQueryData\r\n}\r\n\r\nexport default class Tags extends React.Component<Props> {\r\n  render() {\r\n    const {data} = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const group = data.allMarkdownRemark.group\r\n\r\n    return (\r\n      <Layout title={siteTitle}>\r\n        <Head title=\"All tags\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\r\n        <article>\r\n          <h1>All tags</h1>\r\n          <div className={`page-content`}>\r\n            {group.map(\r\n              tag =>\r\n                tag && (\r\n                  <div key={tag.fieldValue}>\r\n                    <h3>\r\n                      <Link to={`/tags/${tag.fieldValue}/`}>{tag.fieldValue}</Link>\r\n                    </h3>\r\n                    <small>\r\n                      {tag.totalCount} post\r\n                      {tag.totalCount === 1 ? '' : 's'}\r\n                    </small>\r\n                  </div>\r\n                ),\r\n            )}\r\n          </div>\r\n        </article>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\ninterface PageQueryData {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n    }\r\n  }\r\n  allMarkdownRemark: {\r\n    group: {\r\n      fieldValue: string\r\n      totalCount: number\r\n    }[]\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(filter: {frontmatter: {published: {ne: false}}}) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}
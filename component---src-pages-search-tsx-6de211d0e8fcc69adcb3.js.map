{"version":3,"sources":["webpack:///./src/components/docs/DocsWrapper/DocsWrapper.tsx","webpack:///./src/components/layout/Container/Container.tsx","webpack:///./src/components/docs/DocsHeader/DocsHeader.tsx","webpack:///./src/components/docs/DocsHeader/PALDocsHeader.tsx","webpack:///./src/pages/search.tsx"],"names":["DocsWrapper","styled","breakpoints","lg","props","hasToc","Container","DocsHeader","title","subtitle","margin","Section","as","mb","size","color","fontFamily","mt","colors","grey07","defaultProps","undefined","PALDocsHeader","red07","blue10","SearchPage","data","docsPage","site","siteMetadata"],"mappings":"2JAsBeA,EAfKC,YAAO,WAAV,kEAAGA,CAAH,+JAMMC,IAAYC,IACb,SAAAC,GAAK,OAAIA,EAAMC,QAAU,gBAGxBH,IAAYC,GAAK,I,gNCfxC,IAKeG,EALGL,YAAO,MAAPA,CAAH,M,0JCUTM,EAAwC,SAAC,GAAgC,IAA9BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAChE,OACE,gBAACC,EAAD,KACE,gBAAC,IAAD,CAAKC,GAAG,SAASC,GAAIH,GACnB,gBAAC,IAAD,CAASE,GAAG,KAAKE,KAAM,IAAKC,MAAM,QAAQC,WAAW,aAClDR,GAEH,gBAAC,IAAD,CAAMI,GAAG,IAAIE,KAAM,IAAKC,MAAM,SAASE,GAAG,MACvCR,MAOLE,EAAUV,YAAO,WAAV,0EAAGA,CAAH,sIAOSiB,IAAOC,QAG7BZ,EAAWa,aAAe,CACxBX,cAAUY,EACVX,OAAQ,MAGKH,QC7BTe,EAA2C,SAAC,GAAgC,IAA9Bd,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACnE,OACE,gBAAC,EAAD,KAEE,gBAAC,IAAD,CAAKE,GAAG,SAASC,GAAIH,GACnB,gBAAC,IAAD,CAASE,GAAG,KAAKE,KAAM,IAAKC,MAAM,QAAQC,WAAW,aAClDR,GAEH,gBAAC,IAAD,CAAMI,GAAG,IAAIE,KAAM,IAAKC,MAAM,SAASE,GAAG,MACvCR,MAOLE,EAAUV,YAAO,WAAV,yEAAGA,CAAH,wMAWyCiB,IAAOK,MAAUL,IAAOM,QAG9EF,EAAcF,aAAe,CAC3BX,cAAUY,EACVX,OAAQ,MAGKY,S,kCChDf,oHAsCeG,UAhBqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,UAAQ,GACZ,kBAAC,IAAD,KACE,2CAAwBD,EAAKE,KAAKC,aAAarB,QAEjD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYA,MAAM,WAClB,kBAAC,IAAD","file":"component---src-pages-search-tsx-6de211d0e8fcc69adcb3.js","sourcesContent":["import { breakpoints } from 'utils/variables';\r\nimport styled from 'styled-components';\r\n\r\ninterface DocsWrapperProps {\r\n  hasToc?: boolean;\r\n}\r\n\r\nconst DocsWrapper = styled('article')<DocsWrapperProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n  position: relative;\r\n\r\n  @media (min-width: ${breakpoints.lg}px) {\r\n    flex-direction: ${props => props.hasToc && 'row-reverse'};\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.lg - 1}px) {\r\n    overflow-x: auto;\r\n  }\r\n`;\r\n\r\nexport default DocsWrapper;\r\n","import { styledWrapper as styled } from 'utils/primitives';\r\n\r\nconst Container = styled('div')`\r\n  position: relative;\r\n  width: 100%;\r\n  `;\r\n\r\nexport default Container;\r\n","import * as React from 'react';\r\nimport { Heading, Box, Text } from 'components/foundations';\r\nimport { Space } from 'components/Theme';\r\nimport styled from 'styled-components';\r\nimport { colors } from 'utils/variables';\r\n\r\ninterface DocsHeaderProps {\r\n  title: string;\r\n  subtitle?: string;\r\n  margin?: Space;\r\n}\r\n\r\nconst DocsHeader: React.FC<DocsHeaderProps> = ({ title, subtitle, margin }) => {\r\n  return (\r\n    <Section>\r\n      <Box as=\"header\" mb={margin}>\r\n        <Heading as=\"h1\" size={800} color=\"white\" fontFamily=\"sansSerif\">\r\n          {title}\r\n        </Heading>\r\n        <Text as=\"p\" size={400} color=\"grey04\" mt=\"sm\">\r\n          {subtitle}\r\n        </Text>\r\n      </Box>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst Section = styled('section')`\r\n  padding: 1.25rem 1.875rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 200px;\r\n  background-color: ${colors.grey07};\r\n`;\r\n\r\nDocsHeader.defaultProps = {\r\n  subtitle: undefined,\r\n  margin: 'xl'\r\n};\r\n\r\nexport default DocsHeader;\r\n","import * as React from 'react';\r\nimport { Heading, Box, Text } from 'components/foundations';\r\nimport { Space } from 'components/Theme';\r\nimport styled from 'styled-components';\r\nimport { colors } from 'utils/variables';\r\n// import headerBackground from 'assets/images/svg/headerBackground.svg';\r\n\r\ninterface DocsHeaderProps {\r\n  title: string;\r\n  subtitle?: string;\r\n  margin?: Space;\r\n}\r\n\r\nconst PALDocsHeader: React.FC<DocsHeaderProps> = ({ title, subtitle, margin }) => {\r\n  return (\r\n    <Section>\r\n      {/* <img src={headerBackground} alt=\"\" /> */}\r\n      <Box as=\"header\" mb={margin}>\r\n        <Heading as=\"h1\" size={800} color=\"white\" fontFamily=\"sansSerif\">\r\n          {title}\r\n        </Heading>\r\n        <Text as=\"p\" size={400} color=\"grey04\" mt=\"sm\">\r\n          {subtitle}\r\n        </Text>\r\n      </Box>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst Section = styled('section')`\r\n  padding: 1.25rem 1.875rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 400px;\r\n  //background-color: ${colors.grey07};\r\n  // background-url: ${headerBackground};\r\n  // background-repeat: no-repeat;\r\n  background-origin: content-box;\r\n  background-image: -webkit-radial-gradient(circle, ${colors.red07}, ${colors.blue10});\r\n`;\r\n\r\nPALDocsHeader.defaultProps = {\r\n  subtitle: undefined,\r\n  margin: 'xl'\r\n};\r\n\r\nexport default PALDocsHeader;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport IndexLayout from 'layouts';\r\nimport { Page } from 'components/layout/Page';\r\nimport { DocsWrapper } from 'components/docs/DocsWrapper';\r\nimport { Container } from 'components/layout/Container';\r\nimport { DocsHeader } from 'components/docs/DocsHeader';\r\nimport SearchBox from '../components/search/SearchBox';\r\nimport { SiteMetadata } from '../interfaces/gatsby';\r\n\r\ninterface Props {\r\n  data: {\r\n    site: {\r\n      siteMetadata: SiteMetadata;\r\n    };\r\n  };\r\n}\r\n\r\n// FIXME: ThemeProvider is required because for some reason the 404 page doesn't mount\r\n// the <Layout /> component. This will be fixed when we got the time to upgrade to Gatsby v2\r\nconst SearchPage: React.FC<Props> = ({ data }) => (\r\n  <IndexLayout>\r\n    <Page docsPage>\r\n      <Helmet>\r\n        <title>Search &middot; {data.site.siteMetadata.title}</title>\r\n      </Helmet>\r\n      <DocsWrapper>\r\n        <Container>\r\n          <DocsHeader title=\"Search\" />\r\n          <SearchBox />\r\n        </Container>\r\n      </DocsWrapper>\r\n    </Page>\r\n  </IndexLayout>\r\n);\r\n\r\nexport default SearchPage;\r\n\r\nexport const query = graphql`\r\n  query SearchPageQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        sidebarTitle\r\n        sidebarSubtext\r\n        siteLastUpdated\r\n        description\r\n        version\r\n        siteUrl\r\n        keywords\r\n        author {\r\n          name\r\n          url\r\n          email\r\n        }\r\n        socials {\r\n          name\r\n          imgpath\r\n          url\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}
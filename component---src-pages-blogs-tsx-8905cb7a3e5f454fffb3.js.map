{"version":3,"sources":["webpack:///./src/components/page/Markdown/index.ts","webpack:///./src/components/page/blogs/blogList.tsx","webpack:///./src/components/styles/Container.tsx","webpack:///./src/components/styles/HeaderPara.tsx","webpack:///./src/components/styles/Para.tsx","webpack:///./src/components/styles/Card.tsx","webpack:///./src/components/styles/CardLink.tsx","webpack:///./src/components/styles/CardHeader.tsx","webpack:///./src/components/styles/CardImage.tsx","webpack:///./src/components/styles/CardContent.tsx","webpack:///./src/components/styles/CardSection.tsx","webpack:///./src/components/styles/CardTechImage.tsx","webpack:///./src/components/styles/FluidImage.tsx","webpack:///./src/components/styles/FluidCard.tsx","webpack:///./src/components/docs/BackToTopButton/BackToTopButton.tsx","webpack:///./src/pages/blogs.tsx"],"names":["ServiceInfo","styled","BlogList","blogs","isLimited","map","b","to","node","fields","slug","key","frontmatter","title","header_image","extension","src","publicURL","alt","childImageSharp","fluid","timeToRead","excerpt","Container","HeaderPara","Para","Card","colors","grey02","breakpoints","lg","CardLink","Link","CardHeader","CardImage","p","width","CardContent","CardSection","CardTechImage","FluidImage","FluidCard","Wrapper","blue06","white","layerIndexes","overlay","xl","dialog","Inner","BackToTopButton","className","href","aria-label","height","viewBox","fill","xmlns","d","BlogsPage","data","siteMetadata","site","navHidden","docsPage","property","content","name","description","siteUrl","allMarkdownRemark","edges","version","siteLastUpdated","socials"],"mappings":"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","file":"component---src-pages-blogs-tsx-8905cb7a3e5f454fffb3.js","sourcesContent":["export { default as MarkdownContent } from './MarkdownContent';\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'gatsby';\r\n\r\n// import { space, colors, breakpoints } from 'utils/variables';\r\nimport { Heading, Paragraph } from 'components/foundations';\r\n// import Icon from '../../../foundations/icons/Icon';\r\nimport { breakpoints } from 'utils/variables';\r\nimport { Container, HeaderPara, Para, CardLink, CardHeader, CardImage, CardContent } from '../../styles/index';\r\n\r\nconst ServiceInfo = styled('div')`\r\n  margin-top: 75px;\r\n  margin-bottom: -90px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n\r\n  // @media (min-width: ${breakpoints.sm}px) {\r\n  //   flex-direction: column;\r\n  // }\r\n`;\r\n\r\nconst BlogList = ({ blogs, isLimited }) => {\r\n  debugger;\r\n  return (\r\n    <Container>\r\n      <HeaderPara> {isLimited ? <span>Recent Articles</span> : <span>All Articles</span>}</HeaderPara>\r\n      <Para>Read our latest & greatest blog articles</Para>\r\n      <ServiceInfo>\r\n        {blogs.map((b) => {\r\n          return (\r\n            <CardLink to={b.node.fields.slug} key={b.node.frontmatter.title}>\r\n              <CardImage>\r\n                {b.node.frontmatter.header_image.extension === 'svg' ? (\r\n                  <img src={b.node.frontmatter.header_image.publicURL} alt={b.node.frontmatter.title} />\r\n                ) : (\r\n                  <img src={b.node.frontmatter.header_image.childImageSharp.fluid.src} alt={b.node.frontmatter.title} />\r\n                )}\r\n              </CardImage>\r\n              <span>{b.node.timeToRead} min read</span>\r\n              <CardContent>\r\n                <CardHeader>{b.node.frontmatter.title}</CardHeader>\r\n                <Paragraph>{b.node.excerpt}</Paragraph>\r\n              </CardContent>\r\n            </CardLink>\r\n          );\r\n        })}\r\n      </ServiceInfo>\r\n      <Para> {isLimited ? <Link to=\"/blogs\">More...</Link> : <span></span>}</Para>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled('div')`\r\n  padding-top: 75px;\r\n  padding-bottom: 75px;\r\n`;\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nconst HeaderPara = styled('p')`\r\n  text-align: center;\r\n  font-size: 30px;\r\n`;\r\n\r\nexport default HeaderPara;\r\n","import styled from 'styled-components';\r\n\r\nconst Para = styled('p')`\r\n  text-align: center;\r\n  margin-top: 75px;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport default Para;\r\n","import styled from 'styled-components';\r\nimport { space, colors, breakpoints } from 'utils/variables';\r\n\r\nconst Card = styled('div')`\r\n  flex: 1 1 300px;\r\n  // margin: 20px;\r\n  padding: 40px 40px 40px 40px; // ${space.lg}px 10px;\r\n  color: inherit;\r\n  // border: 0px solid ${colors.grey02};\r\n  // -webkit-border-radius: 50% / 14%;\r\n  border-radius: 5% / 5%;\r\n  // text-align: center;\r\n  line-height: 64px;\r\n  -o-text-overflow: clip;\r\n  text-overflow: clip;\r\n  z-index: 1;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: inherit;\r\n    text-decoration: none;\r\n    background-color: ${colors.grey02};\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.lg}px) {\r\n    // margin-left: 20px;\r\n    // margin-right: 20px;\r\n    margin: 20px;\r\n  }\r\n`;\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'gatsby';\r\nimport { space, colors, breakpoints } from 'utils/variables';\r\n\r\nconst CardLink = styled(Link)`\r\n  flex: 1 1 300px;\r\n  // margin: 20px;\r\n  padding: 40px 40px 40px 40px; // ${space.lg}px 10px;\r\n  color: inherit;\r\n  // border: 0px solid ${colors.grey02};\r\n  // -webkit-border-radius: 50% / 14%;\r\n  border-radius: 5% / 5%;\r\n  // text-align: center;\r\n  line-height: 64px;\r\n  -o-text-overflow: clip;\r\n  text-overflow: clip;\r\n  z-index: 1;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: inherit;\r\n    text-decoration: none;\r\n    background-color: ${colors.grey02};\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.lg}px) {\r\n    // margin-left: 20px;\r\n    // margin-right: 20px;\r\n    margin: 20px;\r\n  }\r\n`;\r\n\r\nexport default CardLink;\r\n","import styled from 'styled-components';\r\n\r\nconst CardHeader = styled('h3')`\r\n  font-size: 20px;\r\n  text-align: left;\r\n  text-align: center;\r\n`;\r\n\r\nexport default CardHeader;\r\n","import styled from 'styled-components';\r\nimport { space, colors, breakpoints } from 'utils/variables';\r\n\r\nconst CardImage = styled('div')<{ width: string }>`\r\n  flex: 1 1 auto;\r\n  img {\r\n    display: block;\r\n    height: 200px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.lg}px) {\r\n    flex: 1 0 auto;\r\n\r\n    img {\r\n      max-width: ${(p) => p.width};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CardImage;\r\n","import styled from 'styled-components';\r\n\r\nconst CardContent = styled('div')`\r\n  width: 100%;\r\n  flex: 1 1 auto;\r\n`;\r\nexport default CardContent;\r\n","import styled from 'styled-components';\r\n\r\nconst CardSection = styled('div')`\r\n  margin-top: 75px;\r\n  margin-bottom: -90px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default CardSection;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from 'utils/variables';\r\n\r\nconst CardTechImage = styled('div')`\r\n  flex: 1 1 auto;\r\n  img {\r\n    display: block;\r\n    height: 100px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.lg}px) {\r\n    flex: 1 0 auto;\r\n  }\r\n`;\r\n\r\nexport default CardTechImage;\r\n","import styled from 'styled-components';\r\n\r\nconst FluidImage = styled('img')`\r\n  background-color: #b2eae8;\r\n  padding: 16px;\r\n  object-fit: contain;\r\n  height: 150px;\r\n  width: 100%;\r\n  aspect-ratio: 159 / 92; /* Amounts close to a 184px height */\r\n  margin: auto;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    align-self: stretch;\r\n    height: 100%;\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nexport default FluidImage;\r\n","import styled from 'styled-components';\r\n\r\nconst FluidCard = styled('div')`\r\n  background-color: #b2eae8;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  -moz-box-pack: justify;\r\n  justify-content: space-between;\r\n  box-shadow: rgba(12, 15, 20, 0.02) 0px 0px 0px 1px, rgba(12, 15, 20, 0.06) 0px 0px 1px 0px,\r\n    rgba(12, 15, 20, 0.06) 0px 2px 2px 0px;\r\n  max-width: 344px;\r\n  margin: 24px auto;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n    max-width: 80%;\r\n  }\r\n`;\r\n\r\nexport default FluidCard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { colors, layerIndexes, breakpoints } from 'utils/variables';\r\n\r\nconst Wrapper = styled('a')`\r\n  display: inline-block;\r\n  position: fixed;\r\n  bottom: 24px;\r\n  right: 24px;\r\n  padding: 0;\r\n  background-color: ${colors.blue06};\r\n  color: ${colors.white};\r\n  cursor: pointer;\r\n  z-index: ${layerIndexes.overlay - 1};\r\n  border-radius: 50%;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  box-shadow: 0 2px 4px 1px rgba(0, 0, 0, 0.15);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.lg}px) and (max-width: ${breakpoints.xl - 1}px) {\r\n    z-index: ${layerIndexes.dialog + 2};\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.xl}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Inner = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 60px;\r\n  height: 60px;\r\n`;\r\n\r\ninterface BackToTopButtonProps {\r\n  className?: string;\r\n  href?: string;\r\n}\r\n\r\nconst BackToTopButton: React.SFC<BackToTopButtonProps> = ({ className, href }) => (\r\n  <Wrapper className={className} href={href} aria-label=\"Back to Top\">\r\n    <Inner>\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n          d=\"M4.71 16.71L12 9.41L19.29 16.71C19.383 16.8037 19.4936 16.8781 19.6154 16.9289C19.7373 16.9797 19.868 17.0058 20 17.0058C20.132 17.0058 20.2627 16.9797 20.3846 16.9289C20.5064 16.8781 20.617 16.8037 20.71 16.71C20.8037 16.617 20.8781 16.5064 20.9289 16.3846C20.9797 16.2627 21.0058 16.132 21.0058 16C21.0058 15.868 20.9797 15.7373 20.9289 15.6154C20.8781 15.4936 20.8037 15.383 20.71 15.29L12.71 7.29C12.617 7.19627 12.5064 7.12188 12.3846 7.07111C12.2627 7.02034 12.132 6.9942 12 6.9942C11.868 6.9942 11.7373 7.02034 11.6154 7.07111C11.4936 7.12188 11.383 7.19627 11.29 7.29L3.29 15.29C3.1017 15.4783 2.99591 15.7337 2.99591 16C2.99591 16.2663 3.1017 16.5217 3.29 16.71C3.47831 16.8983 3.7337 17.0041 4 17.0041C4.2663 17.0041 4.5217 16.8983 4.71 16.71Z\"\r\n          fill={colors.white}\r\n        />\r\n      </svg>\r\n    </Inner>\r\n  </Wrapper>\r\n);\r\n\r\nexport default BackToTopButton;\r\n","import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport IndexLayout from 'layouts';\r\nimport { Page } from 'components/layout/Page';\r\nimport { DocsWrapper } from 'components/docs/DocsWrapper';\r\nimport { Container } from 'components/layout/Container';\r\nimport { DocsHeader } from 'components/docs/DocsHeader';\r\nimport { MarkdownContent } from 'components/page/Markdown';\r\nimport styled from 'styled-components';\r\nimport { Heading, Paragraph } from 'components/foundations';\r\nimport { space, colors, breakpoints } from 'utils/variables';\r\nimport { DocsContribution } from 'components/docs/DocsContribution';\r\nimport { FooterWrapper, PALFooter } from 'components/layout/Footer';\r\nimport { BackToTopButton } from 'components/docs/BackToTopButton';\r\n\r\nimport { Slider } from 'components/page/indexPage/ResponsiveSlider';\r\nimport { OurServices } from 'components/page/indexPage/OurServices';\r\nimport { WhyPALPortals } from 'components/page/indexPage/WhyPALPortals';\r\nimport { BlogList } from 'components/page/blogs/index';\r\n\r\n// import illustration1 from 'assets/images/tutorials/spot-hello-world.svg';\r\n// import illustration2 from 'assets/images/tutorials/spot-cms.svg';\r\n// import illustration3 from 'assets/images/tutorials/spot-nl-studio.svg';\r\n// import illustration4 from 'assets/images/tutorials/spot-nl-studio-integration.svg';\r\n\r\nimport { SiteMetadata } from '../interfaces/gatsby';\r\n\r\ninterface Props {\r\n  data: {\r\n    site: {\r\n      siteMetadata: SiteMetadata;\r\n    };\r\n  };\r\n}\r\n\r\nconst BlogsPage: React.FC<Props> = ({ data }) => {\r\n  const { site } = data;\r\n  const { siteMetadata } = site;\r\n  return (\r\n    <IndexLayout navHidden>\r\n      <Page docsPage>\r\n        <Helmet>\r\n          <title>{data.site.siteMetadata.title}</title>\r\n          <meta property=\"og:title\" content={data.site.siteMetadata.title} />\r\n          <meta name=\"description\" content={data.site.siteMetadata.description} />\r\n          <meta property=\"og:description\" content={data.site.siteMetadata.description} />\r\n          <meta property=\"og:locale\" content=\"en_US\" />\r\n          <meta property=\"og:type\" content=\"website\" />\r\n          <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\r\n          <meta name=\"twitter:card\" content={data.site.siteMetadata.title} />\r\n          <meta name=\"twitter:description\" content={data.site.siteMetadata.description} />\r\n          <meta name=\"twitter:title\" content=\"Home - Cloud Solutions\" />\r\n          <meta property=\"og:url\" content={data.site.siteMetadata.siteUrl} />\r\n        </Helmet>\r\n        <DocsWrapper>\r\n          <Container>\r\n            <MarkdownContent>\r\n              <BlogList blogs={data.allMarkdownRemark.edges} isLimited={false} />\r\n            </MarkdownContent>\r\n            <FooterWrapper>\r\n              <PALFooter\r\n                version={siteMetadata.version}\r\n                siteLastUpdated={siteMetadata.siteLastUpdated}\r\n                socials={siteMetadata.socials}\r\n              />\r\n            </FooterWrapper>\r\n          </Container>\r\n          <BackToTopButton href=\"#\" />\r\n        </DocsWrapper>\r\n      </Page>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport default BlogsPage;\r\n\r\nexport const query = graphql`\r\n  query BlogsPageQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        sidebarTitle\r\n        sidebarSubtext\r\n        siteLastUpdated\r\n        description\r\n        version\r\n        siteUrl\r\n        keywords\r\n        author {\r\n          name\r\n          email\r\n        }\r\n        socials {\r\n          name\r\n          imgpath\r\n          url\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/blogs/\" }, frontmatter: { isPublish: { eq: true } } }\r\n      sort: { fields: [frontmatter___createdon], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            layout\r\n          }\r\n          frontmatter {\r\n            title\r\n            description\r\n            category\r\n            header_image {\r\n              ... on File {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 500, quality: 92) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n                extension\r\n                publicURL\r\n              }\r\n            }\r\n            createdby\r\n            createdon\r\n            url\r\n          }\r\n          timeToRead\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}